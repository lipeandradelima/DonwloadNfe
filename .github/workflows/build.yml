name: Build executables

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, macos-14]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pyinstaller

      # ---- Windows build ----
      - name: Build on Windows
        if: runner.os == 'Windows'
        run: |
          pyinstaller --noconsole --onefile --name RenomeadorNFe testeUnificado.py
          ren dist\RenomeadorNFe.exe RenomeadorNFe-windows.exe

      # ---- macOS build ----
      - name: Build on macOS
        if: runner.os == 'macOS'
        run: |
          pyinstaller --windowed --onefile --name RenomeadorNFe testeUnificado.py
          APP_PATH="dist/RenomeadorNFe.app"
          DMG_NAME="RenomeadorNFe-${{ runner.os }}.dmg"
          hdiutil create "${DMG_NAME}" -volname "RenomeadorNFe" -srcfolder "${APP_PATH}" -ov -format UDZO
          ditto -c -k --sequesterRsrc --keepParent "${APP_PATH}" "RenomeadorNFe-${{ runner.os }}.zip"

      # ---- Upload artifacts ----
      - name: Upload Windows exe
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: RenomeadorNFe-windows
          path: RenomeadorNFe-windows.exe

      - name: Upload macOS dmg/zip
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: RenomeadorNFe-${{ runner.os }}
          path: |
            RenomeadorNFe-${{ runner.os }}.dmg
            RenomeadorNFe-${{ runner.os }}.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
